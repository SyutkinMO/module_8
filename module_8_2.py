# -------------Сложные моменты и исключения в стеке вызовов функции-------------

def personal_sum(numbers) -> tuple:
    """
    Должна принимать коллекцию numbers.
    Подсчитывать сумму чисел в numbers путём перебора и увеличивать переменную result.
    Если же при переборе встречается данное типа отличного от числового, то обработать исключение TypeError,
    увеличив счётчик incorrect_data на 1.
    В конечном итоге функция возвращает кортеж из двух значений: result и incorrect_data - кол-во некорректных данных.
    :param numbers:
    :return: result - сумма чисел, incorrect_data - кол-во некорректных данных
    """
    result = 0
    incorrect_data = 0
    if isinstance(numbers, int) or isinstance(numbers, float):  # проверка на принадлежность к классу чисел
        incorrect_data += 1  # если просто передано число, а не коллекция программа завершится
    else:
        for i in numbers:  # если передана коллекция цикл перебирает её
            try:
                result += i  # при переборе числа будут суммироваться
            except TypeError as exp:  # в случае ошибки выведет экземпляр с некорректным типом данных
                incorrect_data += 1  # и увеличит счетчик
                print(f'Некорректный тип данных для подсчёта суммы - {i}')

    return result, incorrect_data  # возвращает кортеж


def calculate_average(numbers):
    """
    Должна принимать коллекцию numbers и возвращать: среднее арифметическое всех чисел.
    Внутри для подсчёта суммы используйте функцию personal_sum написанную ранее.
    Т.к. коллекция numbers может оказаться пустой, то обработайте исключение ZeroDivisionError
    при делении на 0 и верните 0.
    Также в numbers может быть записана не коллекция, а другие типы данных, например числа.
    Обработайте исключение TypeError выводя строку
    'В numbers записан некорректный тип данных'. В таком случае функция просто вернёт None.
    """
    try:
        sum_ = personal_sum(
            numbers)  # требуется отдельная переменная для сохранения кортежа, иначе функция вызовется дважды
        media = sum_[0] / (len(numbers) - sum_[1])  # в знаменателе учитываем количество некорректных данных
    except ZeroDivisionError as exc:
        return 0
    except TypeError as exc:
        print('В numbers записан некорректный тип данных')
        return None
    return media


print(f'Результат 1: {calculate_average("1, 2, 3")}')  # Строка перебирается, но каждый символ - строковый тип
print(f'Результат 2: {calculate_average([1, "Строка", 3, "Ещё Строка"])}')  # Учитываются только 1 и 3
print(f'Результат 3: {calculate_average(567)}')  # Передана не коллекция
print(f'Результат 4: {calculate_average([42, 15, 36, 13])}')  # Всё должно работать
